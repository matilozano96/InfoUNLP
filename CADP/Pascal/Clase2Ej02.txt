program untitled;
    Const 
        dimF = 20;
        
    Type
        jugador = record
          dni : integer;
          nombre : string[20];
          altura : real;
        end;
        lista = ^nodo;
        nodo = record
            dato : jugador;
            sig : lista;
        end;
        vector = array [1..dimF] of jugador;
        
    Procedure leerJugador(var j: jugador);
    begin
        writeln('------------');
        write('DNI de jugador: ');
        readln(j.dni);
        if (j.dni > 0) then begin
            write('Nombre: ');
            readln(j.nombre);
            write('Altura: ');
            readln(j.altura);
        end;
    end;
    
    procedure agregarAtras (j: jugador; var l,ult: lista);
    var nuevo: lista;
    begin
        new(nuevo);
        nuevo^.dato:= j;
        if (l = nil) then begin
            l:= nuevo;
            ult:= l;
        end
        else begin 
            ult^.sig:= nuevo;
            ult:= ult^.sig;
        end;
        
    end;
    
    Procedure CargarLista(var l: lista; var prom: real);
    var temp: jugador;
        ult: lista;
        c: integer;
    Begin
        c:= 0;
        prom:= 0;
        ult:= nil;
        leerJugador(temp);
        while (temp.dni > 0) do begin
            agregarAtras(temp, l, ult);
            prom:= prom + temp.altura;
            c:= c + 1;
            leerJugador(temp);
        end;
        writeln('------------');
        prom:= prom / c;
    End;
    
    procedure imprimirLista(l: lista);
    begin
        if (l <> nil) then begin
            writeln('Nombre: ', l^.dato.nombre);
            writeln('DNI: ', l^.dato.dni);
            writeln('Altura: ', l^.dato.altura:2:2);
            writeln('------------');
            
            imprimirLista(l^.sig);
        end;
    end;
    
    procedure cargarVector(var v: vector; var dimL: integer; l: lista; prom: real);
    begin
        while (l <> nil) and (dimL <= dimF) do begin
            if (l^.dato.altura > prom) then begin
                dimL:= dimL + 1;
                v[dimL] := l^.dato;
            end;
            l:= l^.sig;
        end;
    end;
    
    procedure imprimirVector(v: vector; dimL: integer);
    var i: integer;
    begin
        writeln('Jugadores que superan el promedio: ');
        for i:=1 to dimL do begin
            writeln('Nombre: ', v[i].nombre);
            writeln('DNI: ',v[i].dni);
            writeln('Altura: ', v[i].altura:2:2);
            writeln('------------');
        end;
    end;
    
Procedure ordenarVector(var v:vector; dimL:integer);
    var
        i,j: integer;
        actual: jugador;
    begin
        for i:=2 to dimL do begin
            actual:= v[i];
            j:= i-1;
            while(j>0)and(v[j].dni > actual.dni) do begin
                v[j+1]:= v[j];
                j:= j-1;
            end;
            v[j+1]:= actual;
        end;
    end;
    
    function busquedaDicotomica(v: vector; pri, fin, num: integer); 
    var pos: integer; 
    begin 
        if (pri > fin) then busquedaDicotomica:= -1
        else begin
            pos:= (pri+fin) / 2;
            if (v[pos].dni <> num) then
                if (num < v[pos].dni) then busquedaDicotomica:= busquedaDicotomica(v, pri, pos-1, num)
                else busquedaDicotomica:= busquedaDicotomica(v, pos+1, fin, num)
            else busquedaDicotomica:= pos;
        end;
    end;

    procedure buscarJugador(v: vector; dimL: integer);
    var pos: integer;
    begin
        pos:= busquedaDicotomica(v, 1, dimL, buscar);
        if (pos = -1) then writeln('');
    end;

var l: lista;
    v: vector;
    dimL: integer;
    prom: real;
BEGIN
    dimL:= 0;
    l:= nil;
    
    cargarLista(l, prom);
    imprimirLista(l);
    writeln('Promedio de altura: ', prom:2:2);
    writeln('--------------');
    cargarVector(v, dimL, l, prom);
    imprimirVector(v, dimL);
    
    writeln();
    writeln('Ordenando vector...');
    writeln();
    ordenarVector(v, dimL);
    imprimirVector(v, dimL);
    
    buscarJugador(v, dimL);
END.